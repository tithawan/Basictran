const { createHash } = require("crypto");
exp = {};
exp.province_type = [
  "เลือกจังหวัด",
  "กระบี่",
  "กรุงเทพมหานคร",
  "กาญจนบุรี",
  "กาฬสินธุ์",
  "กำแพงเพชร",
  "ขอนแก่น",
  "จันทบุรี",
  "ฉะเชิงเทรา",
  "ชลบุรี",
  "ชัยนาท",
  "ชัยภูมิ",
  "ชุมพร",
  "เชียงราย",
  "เชียงใหม่",
  "ตรัง",
  "ตราด",
  "ตาก",
  "นครนายก",
  "นครปฐม",
  "นครพนม",
  "นครราชสีมา",
  "นครศรีธรรมราช",
  "นครสวรรค์",
  "นนทบุรี",
  "นราธิวาส",
  "น่าน",
  "บุรีรัมย์",
  "บึงกาฬ",
  "ปทุมธานี",
  "ประจวบคีรีขันธ์",
  "ปราจีนบุรี",
  "ปัตตานี",
  "พระนครศรีอยุธยา",
  "พะเยา",
  "พังงา",
  "พัทลุง",
  "พิจิตร",
  "พิษณุโลก",
  "เพชรบุรี",
  "เพชรบูรณ์",
  "แพร่",
  "ภูเก็ต",
  "มหาสารคาม",
  "มุกดาหาร",
  "แม่ฮ่องสอน",
  "ยโสธร",
  "ยะลา",
  "ร้อยเอ็ด",
  "ระนอง",
  "ระยอง",
  "ราชบุรี",
  "ลพบุรี",
  "ลำปาง",
  "ลำพูน",
  "เลย",
  "ศรีสะเกษ",
  "สกลนคร",
  "สงขลา",
  "สตูล",
  "สมุทรปราการ",
  "สมุทรสงคราม",
  "สมุทรสาคร",
  "สระแก้ว",
  "สระบุรี",
  "สิงห์บุรี",
  "สุโขทัย",
  "สุพรรณบุรี",
  "สุราษฎร์ธานี",
  "สุรินทร์",
  "หนองคาย",
  "หนองบัวลำภู",
  "อ่างทอง",
  "อำนาจเจริญ",
  "อุดรธานี",
  "อุตรดิตถ์",
  "อุทัยธานี",
  "อุบลราชธานี",
];
exp.day_name_arr = {
  0: "อา.",
  1: "จ.",
  2: "อ.",
  3: "พ.",
  4: "พฤ.",
  5: "ศ.",
  6: "ส.",
  
};
exp.day_name_arr_full = {
  0: "อาทิตย์",
  1: "จันทร์",
  2: "อังคาร",
  3: "พุธ",
  4: "พฤหัสบดี",
  5: "ศุกร์",
  6: "เสาร์",  
};
exp.thaiNum_arr = {
  1: "๑",
  2: "๒",
  3: "๓",
  4: "๔",
  5: "๕",
  6: "๖",
  7: "๗",
  8: "๘",
  9: "๙",
  0: "๐",
};
exp.thaiMonth_arr = {
  0: "มกราคม",
  1: "กุมภาพันธ์",
  2: "มีนาคม",
  3: "เมษายน",
  4: "พฤษภาคม",
  5: "มิถุนายน",
  6: "กรกฎาคม",
  7: "สิงหาคม",
  8: "กันยายน",
  9: "ตุลาคม",
  10: "พฤศจิกายน",
  11: "ธันวาคม",
};
exp.uniqueAlphaNum20 = () => {
  var dated = Date.now();
  var unix = Math.floor(dated / 1000);
  var hash_str = unix * Math.floor(Math.random() * 100);
  const hash = createHash("sha256");
  hash.update(""+hash_str);
  fin_hash = hash.digest("hex");
  return fin_hash.substr(0, 20);
};
exp.toInt = (dat) => {
  let result = parseInt(dat);
  if (isNaN(result)) {
    result = 0;
  }
  return result;
};
exp.toFloat = (dat) => {
  let result = parseFloat(dat);
  if (isNaN(result)) {
    result = 0;
  }
  return result;
};

// debug region
//console.log(exp.uniqueAlphaNum20());
module.exports =exp;